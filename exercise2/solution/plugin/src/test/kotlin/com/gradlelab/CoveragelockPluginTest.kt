/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package com.gradlelab

import org.gradle.testfixtures.ProjectBuilder
import org.gradle.testing.jacoco.tasks.JacocoCoverageVerification
import org.gradle.testing.jacoco.tasks.rules.JacocoViolationRule
import kotlin.test.Test
import kotlin.test.assertEquals
import kotlin.test.assertNotNull

/**
 * A simple unit test for the 'com.gradlelab.greeting' plugin.
 */
class CoveragelockPluginTest {

    @Test fun `plugin creates extension`() {
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("application")
        project.plugins.apply("com.gradlelab.coveragelock")

        assertNotNull(project.extensions.findByName("coverageLockIn"))
        val ext : CoverageLockInExtension = project.extensions.getByName("coverageLockIn") as CoverageLockInExtension
        assertEquals("LINE", ext.counter.get())
        assertEquals(0.8f, ext.goal.get())
        assertEquals(false, ext.onCi.get())
    }

    @Test fun `jacoco rule created`() {
        val project = ProjectBuilder.builder().build()
        project.plugins.apply("application")
        project.plugins.apply("com.gradlelab.coveragelock")

        val task : JacocoCoverageVerification =
            project.tasks.named("jacocoTestCoverageVerification", JacocoCoverageVerification::class.java).get()

        assertEquals(1, task.violationRules.rules.size)

        val rule : JacocoViolationRule = task.violationRules.rules[0]
        assertEquals(1, rule.limits.size)
        assertEquals("LINE", rule.limits[0].counter)
        assertEquals("COVEREDRATIO", rule.limits[0].value)
    }
}
